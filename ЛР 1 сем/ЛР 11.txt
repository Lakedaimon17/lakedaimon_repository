//Дан класс "поезд", содержащий следующие поля: номер поезда, название пункта отправления, название пункта назначения, время отправления(время отправления с заданной станции).

Класс "станция", который содержит следующие поля: название станции, массив объектов типа "поезд"(массив с заданным количеством объектов)

Необходимо реализовать меню, в котором будут следующие пункты:
1. Ввод данных
2. Вывод информации о поездах, которые имеют заданное значение пункта назначения
3. Вывод данных о поездах, которые отправляются после заданного времени отправления
4. Выход

Время отправления в любом формате. Списка нет, только массив. Считать, что все данные вводятся корректно//


using System;

class Train
{
    public string TrainNumber { get; set; }          
    public string DepartureStation { get; set; }      
    public string ArrivalStation { get; set; }        
    public string DepartureTime { get; set; }       

    public Train(string trainNumber, string departureStation, string arrivalStation, string departureTime)
    {
        TrainNumber = trainNumber;
        DepartureStation = departureStation;
        ArrivalStation = arrivalStation;
        DepartureTime = departureTime;
    }

    public override string ToString()
    {
        return $"Поезд {TrainNumber}: {DepartureStation} -> {ArrivalStation}, Время отправления: {DepartureTime}";
    }
}

class Station
{
    public string Name { get; set; }                
    public Train[] Trains;                           
    public int TrainCount;                           

    public Station(string name, int maxTrains)
    {
        Name = name;
        Trains = new Train[maxTrains]; 
        TrainCount = 0;
    }

    public void AddTrain(Train train)
    {
        if (TrainCount < Trains.Length)
        {
            Trains[TrainCount] = train;
            TrainCount++;
        }
        else
        {
            Console.WriteLine("Количество поездов на станции превышено.");
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        Station[] stations = new Station[10];
        int stationCount = 0;

        while (true)
        {
            Console.WriteLine("Меню:");
            Console.WriteLine("1. Ввод данных");
            Console.WriteLine("2. Вывод информации о поездах с заданным значением пункта назначения");
            Console.WriteLine("3. Вывод данных о поездах, отправляющихся после заданного времени");
            Console.WriteLine("4. Выход");
            Console.Write("Выберите пункт меню: ");
            string choice = Console.ReadLine();

            switch (choice)
            {
                case "1":
                    if (stationCount < 10)
                    {
                        InputData(stations, stationCount);
                        stationCount++;
                    }
                    else
                    {
                        Console.WriteLine("Достигнуто максимальное количество станций.");
                    }
                    break;

                case "2":
                    FilterTrainsByDestination(stations, stationCount);
                    break;

                case "3":
                    FilterTrainsAfterTime(stations, stationCount);
                    break;

                case "4":
                    Console.WriteLine("Выход из программы.");
                    return;

                default:
                    Console.WriteLine("Неверный выбор, попробуйте снова.");
                    break;
            }
        }
    }

    static void InputData(Station[] stations, int stationIndex)
    {
        Console.Write("Введите название станции: ");
        string stationName = Console.ReadLine();

        Station station = new Station(stationName, 10);
        for (int i = 0; i < 10; i++)
        {
            Console.Write($"Введите номер поезда {i + 1}: ");
            string trainNumber = Console.ReadLine();
            Console.Write("Введите название пункта отправления: ");
            string departureStation = Console.ReadLine();
            Console.Write("Введите название пункта назначения: ");
            string arrivalStation = Console.ReadLine();
            Console.Write("Введите время отправления (в формате ЧЧ:ММ): ");
            string departureTime = Console.ReadLine();
            station.AddTrain(new Train(trainNumber, departureStation, arrivalStation, departureTime));
        }

        stations[stationIndex] = station;
        Console.WriteLine("Данные успешно добавлены.");
    }

    static void FilterTrainsByDestination(Station[] stations, int stationCount)
    {
        Console.Write("Введите пункт назначения: ");
        string destination = Console.ReadLine();
        bool found = false;

        for (int i = 0; i < stationCount; i++)
        {
            for (int j = 0; j < stations[i].TrainCount; j++)
            {
                if (stations[i].Trains[j].ArrivalStation.Equals(destination, StringComparison.OrdinalIgnoreCase))
                {
                    Console.WriteLine(stations[i].Trains[j]);
                    found = true;
                }
            }
        }

        if (!found)
        {
            Console.WriteLine("Поезда с данным пунктом назначения не найдены.");
        }
    }

    static void FilterTrainsAfterTime(Station[] stations, int stationCount)
    {
        Console.Write("Введите время отправления (в формате ЧЧ:ММ): ");
        string inputTimeString = Console.ReadLine();
        DateTime inputTime;

        while (!DateTime.TryParse(inputTimeString, out inputTime))
        {
            Console.Write("Ошибка ввода. Пожалуйста, введите время в правильном формате: ");
            inputTimeString = Console.ReadLine();
        }

        bool found = false;
        for (int i = 0; i < stationCount; i++)
        {
            for (int j = 0; j < stations[i].TrainCount; j++)
            {
                DateTime departureTime;
                if (DateTime.TryParse(stations[i].Trains[j].DepartureTime, out departureTime))
                {
                    if (departureTime > inputTime)
                    {
                        Console.WriteLine(stations[i].Trains[j]);
                        found = true;
                    }
                }
            }
        }

        if (!found)
        {
            Console.WriteLine("Поездов, отправляющихся после заданного времени, не найдено.");
        }
    }
}