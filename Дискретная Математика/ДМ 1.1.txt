//Проверка на связность при помощи Depth-First Search (на вход поступает матрица). Выдавать кол-во компонент связности исходного графа.

using System;
using System.Collections.Generic;

class GraphDFSChecker
{
    private int[,] adjacencyMatrix;
    private bool[] visited;
    private int vertexCount;

    public int CountComponents(int[,] matrix)
    {
        adjacencyMatrix = matrix;
        vertexCount = matrix.GetLength(0);
        visited = new bool[vertexCount];
        int components = 0;

        for (int i = 0; i < vertexCount; i++)
        {
            if (!visited[i])
            {
                DFS(i);
                components++;
            }
        }

        return components;
    }

    private void DFS(int vertex)
    {
        visited[vertex] = true;
        
        for (int i = 0; i < vertexCount; i++)
        {
            if (adjacencyMatrix[vertex, i] == 1 && !visited[i])
            {
                DFS(i);
            }
        }
    }
}

class Program
{
    static void Main()
    {
        int[,] matrix = {
            {0, 1, 0, 0, 0},
            {1, 0, 0, 0, 0},
            {0, 0, 0, 1, 0},
            {0, 0, 1, 0, 0},
            {0, 0, 0, 0, 0}
        };

        var checker = new GraphDFSChecker();
        int components = checker.CountComponents(matrix);
        Console.WriteLine($"Число компонент связности: {components}");
    }
}